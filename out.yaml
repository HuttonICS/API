definitions:
  '**Deprecated** Retrieve study observation variables': {}
  '**Deprecated** Save Observation Unit Phenotypes': {}
  Add a sample: {}
  Authentication: {}
  Germplasm Details by germplasmDbId: {}
  Germplasm Markerprofiles: {}
  Germplasm Pedigree: {}
  Germplasm Search: {}
  Germplasm attribute values by germplasmDbId: {}
  Germplasm search through POST: {}
  Get List of Trial Summaries: {}
  Get Observation Units by observation variable ids: {}
  Get Trial By Id: {}
  Get a Sample: {}
  List Observation Levels: {}
  List Seasons: {}
  List Study Types: {}
  List all Traits: {}
  List attribute categories: {}
  List attributes available: {}
  Observation Unit Details: {}
  Phenotype Search: {}
  Plate Details by vendorPlateId: {}
  Plot Layout Details: {}
  Post Sample Search: {}
  Program Search: {}
  Program list: {}
  Register plates: {}
  Sample Search: {}
  Save Observation Unit Phenotypes: {}
  Save Phenotypes for Many Studies: {}
  Save study Observation Units as table: {}
  Search Studies: {}
  Search for plates: {}
  Study Details: {}
  Study Germplasm Details: {}
  Study Observation Units as a Table: {}
  Study Observation Variables: {}
  Trait Details: {}
  Vendor specification: {}
  alleMatrixValues:
    properties:
      data:
        description: 'Is an array of arrays; each inner array has three entries: ```markerDbId```,
          ```markerprofileDbId```, ```alleleCall```. Scores have to be represented
          as described further up. e.g. unknown data as "N", etc. Missing data can
          be skipped.'
        items:
          items:
            type: string
          type: array
        type: array
    type: object
  alleleMatrixDetails:
    properties:
      description:
        description: How the matrix was generated
        type: string
      lastUpdated:
        description: A date format
        type: string
      mtrixDbId:
        description: ID of the matrix
        type: string
      name:
        description: Name of the matrix
        type: string
      studyDbId:
        description: Link to the study where the matrix was produced
        type: string
    type: object
  call:
    properties:
      call:
        type: string
      datatypes:
        items:
          type: string
        type: array
      methods:
        items:
          type: string
        type: array
    type: object
  genome maps:
    properties:
      comments:
        type: string
      linkageGroupCount:
        format: int32
        type: integer
      mapDbId:
        type: string
      markerCount:
        format: int32
        type: integer
      name:
        type: string
      publishedDate:
        format: date
        type: string
      species:
        type: string
      type:
        type: string
      unit:
        type: string
    type: object
  linkageGroups:
    properties:
      linkageGroupName:
        type: string
      markerCount:
        type: integer
      maxPosition:
        type: integer
    type: object
  location:
    properties:
      abbreviation:
        type: string
      additionalInfo:
        description: Additional arbitrary info on the study, like objectives or publications
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      altitude:
        type: number
      countryCode:
        description: '[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
          spec'
        type: string
      countryName:
        type: string
      instituteAddress:
        type: string
      instituteAdress:
        description: 'Depecrarted  **Use instituteAddress** '
        type: string
      instituteName:
        description: each institute/laboratory can have several experimental field
        type: string
      latitude:
        type: number
      locationDbId:
        description: string identifier
        type: string
      locationType:
        type: string
      longitude:
        type: number
      name:
        type: string
    type: object
  map details:
    properties:
      data:
        items:
          $ref: '#/definitions/linkageGroups'
        type: array
      mapDbId:
        type: string
      name:
        type: string
      type:
        type: string
      unit:
        type: string
    type: object
  marker:
    properties:
      analysisMethods:
        description: List of the genotyping platforms used to interrogate the marker
        items:
          type: string
        type: array
      defaultDisplayName:
        description: A string representing the marker that will be meaningful to the
          user
        type: string
      markerDbId:
        description: Internal db identifier
        type: string
      refAlt:
        description: List of the reference (as the first item) and alternatives (the
          remaining items)
        items:
          type: string
        type: array
      synonyms:
        description: List of other names for this marker
        items:
          type: string
        type: array
      type:
        description: The type of marker, e.g. SNP
        type: string
    type: object
  markerProfile:
    properties:
      analysisMethod:
        type: string
      data:
        description: '**Required**

          array of marker-name/score pairs'
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      extractDbId:
        description: '**Required**'
        type: string
      germplasmDbId:
        description: '**Required**'
        type: string
      markerprofileDbId:
        description: Unique in the database. Can be a catenation of unique IDs for
          germplasm and extract. **Required**
        type: string
    type: object
  markerprofileDescription:
    properties:
      analysisMethod:
        type: string
      extractDbId:
        type: string
      germplasmDbId:
        type: string
      markerprofileDbId:
        type: string
      resultCount:
        type: integer
      sampleDbId:
        type: string
      uniqueDisplayName:
        type: string
    type: object
  metadata:
    properties:
      datafiles:
        items:
          type: string
        type: array
      pagination:
        properties:
          currentPage:
            type: integer
          pageSize:
            type: integer
          totalCout:
            type: integer
          totalPages:
            type: integer
        type: object
      status:
        items:
          $ref: '#/definitions/status'
        type: array
    type: object
  method:
    description: Method metadata
    properties:
      class:
        description: 'Method class (examples: "Measurement", "Counting", "Estimation",
          "Computation", etc.'
        type: string
      description:
        description: Method description.
        type: string
      formula:
        description: For computational methods i.e., when the method consists in assessing
          the trait by computing measurements, write the generic formula used for
          the calculation
        type: string
      methodDbId:
        description: Method unique identifier
        type: string
      name:
        description: Method name (usually a short name)
        type: string
      reference:
        description: Bibliographical reference describing the method.
        type: string
    type: object
  observation variable:
    properties:
      contextOfUse:
        description: 'Indication of how trait is routinely used. (examples: ["Trial
          evaluation", "Nursery evaluation"])'
        items:
          type: string
        type: array
      crop:
        description: 'Crop name (examples: "Maize", "Wheat")'
        type: string
      date:
        description: Date of submission of the variable (ISO 8601).
        type: string
      defaultValue:
        description: 'Variable default value. (examples: "red", "2.3", etc.)'
        type: string
      growthStage:
        description: 'Growth stage at which measurement is made (examples: "flowering")'
        type: string
      institution:
        description: Name of institution submitting the variable
        type: string
      language:
        description: 2 letter ISO code for the language of submission of the variable.
        type: string
      method:
        $ref: '#/definitions/method'
      name:
        description: Variable name (usually a short name)
        type: string
      observationVariableDbId:
        description: Variable unique identifier
        type: string
      ontologyDbId:
        description: Variable ontology unique identifier
        type: string
      ontologyName:
        description: Variable ontology name (usually a short name)
        type: string
      scale:
        $ref: '#/definitions/scale'
      scientist:
        description: Name of scientist submitting the variable.
        type: string
      status:
        description: 'Variable status. (examples: "recommended", "obsolete", "legacy",
          etc.)'
        type: string
      synonyms:
        description: Other variable names
        items:
          type: string
        type: array
      trait:
        $ref: '#/definitions/trait'
      xref:
        description: Cross reference of the variable term to a term from an external
          ontology or to a database of a major system.
        type: string
    required:
    - observationVariableDbId
    - name
    - ontologyDbId
    - ontologyName
    - trait
    - method
    - scale
    - defaultValue
    type: object
  ontology:
    properties:
      authors:
        description: Ontology's list of authors (no specific format)
        type: string
      copyright:
        description: Ontology copyright
        type: string
      licence:
        description: Ontology licence
        type: string
      ontologyDbId:
        description: Ontology database unique identifier
        type: string
      ontologyName:
        description: Ontology name
        type: string
      version:
        description: Ontology version (no specific format)
        type: string
    required:
    - ontologyDbId
    - ontologyName
    type: object
  scale:
    description: Scale metadata
    properties:
      class:
        description: Class of the scale, entries can be "Numerical", "Nominal", "Ordinal",
          "Text", "Code", "Time", "Duration"
        type: string
      decimalPlaces:
        description: For numerical, number of decimal places to be reported
        type: integer
      name:
        description: Name of the scale
        type: string
      scaleDbId:
        description: Unique identifier of the scale. If left blank, the upload system
          will automatically generate a scale ID.
        type: string
      validValues:
        $ref: '#/definitions/validValues'
      xref:
        description: Cross reference to the scale, for example to a unit ontology
          such as UO or to a unit of an external major database
        type: string
    type: object
  status:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  trait:
    description: Trait metadata
    properties:
      alternativeAbbreviations:
        description: Other frequent abbreviations of the trait, if any. These abbreviations
          do not have to follow a convention. If several aternative abbreviations,
          separate with commas.
        items:
          type: string
        type: array
      attribute:
        description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
          the attribute is the observed feature (or characteristic) of the entity
          e.g., for "grain colour", attribute = "colour"
        type: string
      class:
        description: 'Trait class. (examples: "morphological trait", "phenological
          trait", "agronomical trait", "physiological trait", "abiotic stress trait",
          "biotic stress trait", "biochemical trait", "quality traits trait", "fertility
          trait", etc.)'
        type: string
      description:
        description: Trait description.
        type: string
      entity:
        description: A trait can be decomposed as "Trait" = "Entity" + "Attribute",
          the entity is the part of the plant that the trait refers to e.g., for "grain
          colour", entity = "grain"
        type: string
      mainAbbreviation:
        description: 'Main abbreviation for trait name. (examples: "Carotenoid content"
          => "CC")'
        type: string
      name:
        description: Trait name (usually a short name)
        type: string
      status:
        description: 'Trait status (examples: "recommended", "obsolete", "legacy",
          etc.)'
        type: string
      synonyms:
        description: Other trait names
        items:
          type: string
        type: array
      traitDbId:
        description: Trait unique identifier
        type: string
      xref:
        description: Cross reference of the trait to an external ontology or database
          term e.g., Xref to a trait ontology (TO) term
        type: string
    required:
    - traitDbId
    - name
    type: object
  validValues:
    properties:
      categories:
        description: 'List of possible values and their meaning (examples: ["0=low",
          "1=medium", "2=high"]'
        items:
          type: string
        type: array
      max:
        description: Maximum value (used for field data capture control).
        type: integer
      min:
        description: Minimum value (used for data capture control) for numerical and
          date scales
        type: integer
    type: object
info:
  description: ''
  title: ''
  version: ''
paths:
  /attributes:
    get:
      description: "List available attributes.\n\n###### Response data types\n\n|Variable|Datatype|Description|Required|\
        \  \n|------|------|------|:-----:|\n|attributeCategoryDbId|string|internal\
        \ database identifier, not stable |Y|\n|code|string|abbreviation||\n|uri|string|reference\
        \ to external documentation, ontology etc.||\n|name|string|for display, and\
        \ stable identifier unique in the database|Y|\n|description|string|||\n|datatype|string|e.g.\
        \ Categorical, Numeric, Boolean||\n|values|array of string|array of all possible\
        \ values for this attribute|Y|\n\n<a>example.com/brapi/v1/attributes</a>"
      parameters:
      - description: filter for kind of attributes
        in: query
        name: attributeCategoryDbId
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 1
                  totalPages: 1
                status: []
              result:
                data:
                - attributeCategoryDbId: '1'
                  code: RHT
                  datatype: Categorical
                  description: Allele of marker 11_4769, diagnostic for allele b of
                    reduced-height gene Rht-B1
                  name: Rht-B1b
                  uri: http://www.cropontology.org/rdf/CO_321:0000020
                  values:
                  - Present
                  - Absent
                  - Heterozygous
          headers: {}
      summary: Attributes by attributeCategoryDbId
      tags:
      - attributes
  /attributes/categories:
    get:
      description: 'List all available attribute categories.


        <a>example.com/brapi/v1/attributes/categories</a>'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Germplasm attribute categories
      tags:
      - attributes
  /brapi/v1/allelematrices:
    get:
      description: '**Status**: Proposed

        **Implemented by**: GOBII

        **Used by**: Flapjack

        </br>

        This resource is used for reading and writing genomic matrices:

        </br>

        GET provides a list of available matrices, optionally filtered by study;

        POST will provide a means for adding new matrices (content TBD).'
      parameters:
      - description: restricts the list of matrices to a specific study.
        in: query
        name: studyDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  $ref: '#/definitions/alleleMatrixDetails'
                type: array
            type: object
      summary: Matrices through GET
      tags:
      - Marker profiles
  /brapi/v1/allelematrix-search:
    get:
      description: "**Status**: ACCEPTED.\n**Implemented by**: Germinate (POST only),\
        \ Cassavabase\n**Used by**: Flapjack (POST only)\nSee <a href=\"#introduction/search-services\"\
        >Search Services</a> for additional implementation details.\n</br>\n This\
        \ uses a more efficient data structure and pagination for large number of\
        \ markers. \n</br>\nUse GET when parameter size is less than 2K bytes.\nThis\
        \ method may support asynchronous processing."
      parameters:
      - description: The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId'
          is present.
        in: query
        items:
          type: string
        name: markerprofileDbId
        required: true
        type: array
      - description: ids of the markers. if none are specified, results are returned
          for all markers in the database. Not Required if 'markerprofileDbId' or
          'matrixDbId' is present.
        in: query
        items:
          type: string
        name: markerDbId
        required: true
        type: array
      - description: ''
        in: query
        items:
          type: string
        name: matrixDbId
        required: true
        type: array
      - description: format for the datafile to be downloaded. tsv and csv currently
          supported; flapjack may be supported.
        in: query
        name: format
        required: false
        type: string
      - description: Should homozygotes NOT be collapsed into a single occurrence?
        in: query
        name: expandHomozygotes
        required: false
        type: boolean
      - description: The string to use as a representation for missing data or the
          reserved word "empty_string".
        in: query
        name: unknownString
        required: false
        type: string
      - description: The string to use as a separator for phased allele calls or the
          reserved word "empty_string".
        in: query
        name: sepPhased
        required: false
        type: string
      - description: The string to use as a separator for unphased allele calls or
          the reserved word "empty_string".
        in: query
        name: sepUnphased
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 1
                  totalPages: 1
                status: []
              result:
                data:
                - - '1'
                  - '1'
                  - A/B
                - - '1'
                  - '2'
                  - B
                - - '2'
                  - '1'
                  - A
                - - '2'
                  - '2'
                  - A/B
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  $ref: '#/definitions/alleMatrixValues'
                type: array
            type: object
      summary: Scores through GET
      tags:
      - Marker profiles
    post:
      description: 'Use POST when parameter size is greater than 2K bytes.


        - If no format is specified, this call returns the data in JSON form.


        - If a format (other than JSON) is specified and the server supports this
        format, it will return the link to the exported data file in the "datafiles"
        field of the "metadata".


        - If more than one format is requested at a time, the server will throw a
        "501 Not Implemented" error.


        The format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)'
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            Format JSON:
              metadata:
                datafiles: null
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                data:
                - - '1'
                  - '1'
                  - A/B
                - - '1'
                  - '2'
                  - B
                - - '2'
                  - '1'
                  - A
                - - '2'
                  - '2'
                  - A/B
            Format TSV:
              metadata:
                datafiles:
                - https://my-fancy-server/files/allelematrix-1234.tsv
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                data: []
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  $ref: '#/definitions/alleMatrixValues'
                type: array
            type: object
      summary: Scores through POST
      tags: []
  /brapi/v1/germplasm-search:
    post:
      description: Use POST for large queries (>2K bytes).
      parameters:
      - in: body
        name: body
        schema:
          properties:
            accessionNumbers:
              items:
                type: string
              type: array
            germplasmDbIds:
              items:
                type: string
              type: array
            germplasmGenus:
              items:
                type: string
              type: array
            germplasmNames:
              items:
                type: string
              type: array
            germplasmPUIs:
              items:
                type: string
              type: array
            germplasmSpecies:
              items:
                type: string
              type: array
            page:
              type: number
            pageSize:
              type: number
          type: object
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 1
                  pageSize: 100
                  totalCount: 102
                  totalPages: 2
                status: []
              result:
                data:
                - accessionNumber: ITC0609
                  acquisitionDate: '1947-01-31'
                  biologicalStatusOfAccessionCode: 412
                  commonCropName: banana
                  countryOfOriginCode: UNK
                  defaultDisplayName: Pahang
                  donors:
                  - donorAccessionNumber: ''
                    donorInstituteCode: ''
                    germplasmPUI: ''
                  genus: Musa
                  germplasmDbId: 01BEL084609
                  germplasmName: Pahang
                  germplasmPUI: http://www.crop-diversity.org/mgis/accession/01BEL084609
                  germplasmSeedSource: Female GID:4/Male GID:4
                  instituteCode: 01BEL084
                  instituteName: ITC
                  pedigree: TOBA97/SW90.1057
                  species: acuminata
                  speciesAuthority: ''
                  subtaxa: sp malaccensis var pahang
                  subtaxaAuthority: ''
                  synonyms: []
                  taxonIds:
                  - sourceName: ncbiTaxon
                    taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                  - sourceName: ciradTaxon
                    taxonId: 23-E
                  typeOfGermplasmStorageCode:
                  - 10
                - accessionNumber: ITC0685
                  acquisitionDate: '1977-01-31'
                  biologicalStatusOfAccessionCode: 412
                  commonCropName: banana
                  countryOfOriginCode: UNK
                  defaultDisplayName: Pah
                  donors:
                  - donorAccessionNumber: ''
                    donorInstituteCode: ''
                    germplasmPUI: ''
                  genus: Musa
                  germplasmDbId: 03REL084609
                  germplasmName: Pah
                  germplasmPUI: doi:10.15454/328757862534E12
                  germplasmSeedSource: Female GID:4/Male GID:4
                  instituteCode: 01BEL084
                  instituteName: ITC
                  pedigree: TOBA97/SW90.1057
                  species: acuminata
                  speciesAuthority: ''
                  subtaxa: sp malaccensis var pah
                  subtaxaAuthority: ''
                  synonyms: []
                  taxonIds:
                  - sourceName: ncbiTaxon
                    taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                  - sourceName: ciradTaxon
                    taxonId: 23-E
                  typeOfGermplasmStorageCode:
                  - 10
          headers: {}
      summary: Germplasm search through POST
      tags: []
  /brapi/v1/locations:
    get:
      parameters:
      - description: Filter by location type specified.
        in: query
        name: locationType
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                currentPage: 0
                datafiles: []
                pageSize: 1000
                pagination: null
                status: []
                totalCount: 2
                totalPages: 1
              result:
                data:
                - abbreviation: IB
                  additionalInfo:
                    annualMeanRain: value
                    soilDescription: '23'
                  altitude: 12
                  countryCode: NGA
                  countryName: Nigeria
                  instituteAddress: route foo, Clermont Ferrand, France
                  instituteName: INRA - GDEC
                  latitude: -21.5
                  locationDbId: abc123
                  locationType: Breeding Location
                  longitude: 165.5
                  name: Ibadan
                - abbreviation: GO
                  additionalInfo:
                    name1: value1
                    name2: value2
                  altitude: 10
                  countryCode: IND
                  countryName: India
                  latitude: 28.36
                  locationDbId: def456
                  locationType: Storage Location
                  longitude: 77.12
                  name: Goa
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/location'
                    type: array
                type: object
            type: object
      tags:
      - Locations
  /brapi/v1/maps:
    get:
      description: 'Get list of maps <br>

        **Status:** ACCEPTED **Implemented by:** Germinate, Cassavabase **Used by:**
        Flapjack do we need list of parents and specify mapping population?'
      parameters:
      - description: Species name
        in: query
        name: species
        required: false
        type: string
      - description: Type of map
        in: query
        name: type
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - comments: This map contains ...
                  linkageGroupCount: 7
                  mapDbId: '1'
                  markerCount: 1000
                  name: Some Map
                  publishedDate: '2008-04-16'
                  species: Some species
                  type: Genetic
                  unit: cM
                - comments: this is blah blah
                  linkageGroupCount: 7
                  mapDbId: '2'
                  markerCount: 1501
                  name: Some Other map
                  publishedDate: '2009-01-12'
                  species: Some Species
                  type: Genetic
                  unit: cM
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/genome maps'
                    type: array
                type: object
            type: object
      summary: Get list of maps
      tags:
      - Genome Maps
  /brapi/v1/maps/{mapDbId}:
    get:
      description: 'Provides the number of markers on each linkageGroup and the max
        position on the linkageGroup <br>

        **Status:** ACCEPTED **Implemented by:** Germinate, Cassavabase **Used by:**
        Flapjack'
      parameters:
      - description: The internal db id of a selected map
        in: path
        name: mapDbId
        required: true
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - linkageGroupName: '1'
                  markerCount: 100000
                  maxPosition: 10000000
                - linkageGroupName: '2'
                  markerCount: 1247
                  maxPosition: 12347889
                linkageGroups:
                - DEPRECATED - Replaced by 'data' in v1.1
                mapDbId: abc123
                name: Some map
                type: Genetic
                unit: cM
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                $ref: '#/definitions/map details'
            type: object
      summary: Get map details
      tags:
      - Genome Maps
  /brapi/v1/maps/{mapDbId}/positions:
    get:
      description: 'markers ordered by linkageGroup and position <br>

        **Status:** ACCEPTED. **Implemented by:** Germinate, Cassavabase **Used by:**
        Flapjack'
      parameters:
      - description: unique id of the map
        in: path
        name: mapDbId
        required: true
        type: string
      - description: '**Deprecated** Use linkageGroupName instead'
        in: body
        name: linkageGroupId
        required: false
        schema:
          type: string
      - description: The chromosome identifier or the generic linkage group identifier
          if the chromosome is not applicable.
        in: query
        name: linkageGroupName
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - linkageGroupName: 1A
                  location: '1000'
                  markerDbId: '1'
                  markerName: marker1
                - linkageGroupName: 1A
                  location: '1001'
                  markerDbId: '2'
                  markerName: marker2
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/marker'
                    type: array
                type: object
            type: object
      summary: Get map data
      tags:
      - Genome Maps
  /brapi/v1/maps/{mapDbId}/positions/{linkageGroupName}:
    get:
      description: markers ordered by linkageGroup and position
      parameters:
      - description: unique id of the map
        in: path
        name: mapDbId
        required: true
        type: string
      - description: '**Deprecated** Use linkageGroupName instead'
        in: body
        name: linkageGroupId
        required: false
        schema:
          type: string
      - description: The chromosome identifier or the generic linkage group identifier
          if the chromosome is not applicable.
        in: path
        name: linkageGroupName
        required: true
        type: string
      - description: minimum position on linkage group
        in: query
        name: min
        required: false
        type: integer
      - description: maximum position on linkage group
        in: query
        name: max
        required: false
        type: integer
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - location: '1000'
                  markerDbId: '1'
                  markerName: marker1
                - location: '1001'
                  markerDbId: '2'
                  markerName: marker2
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/marker'
                    type: array
                type: object
            type: object
      summary: Get map data by range on linkageGroup
      tags:
      - Genome Maps
  /brapi/v1/markerprofiles:
    get:
      description: '**Scope**: GENOTYPING.

        **Status**: ACCEPTED.

        **Implemented by**: Germinate

        **Used by**: Flapjack

        </br>

        For the requested Germplasm Id and/or Extract Id, returns the Markerprofile
        Id and number of non-missing allele calls (marker/allele pairs).'
      parameters:
      - description: The server's internal ids for the Germplasm IDs, as returned
          by the **Find markerprofile by Germplasm** service.
        in: query
        name: germplasmDbId
        required: false
        type: string
      - description: The server's internal id for the StudyDbId
        in: query
        name: studyDbId
        required: false
        type: string
      - description: The server's internal id for the SampleDbId
        in: query
        name: sampleDbId
        required: false
        type: string
      - description: The server's internal id for the ExtractDbId
        in: query
        name: extractDbId
        required: false
        type: string
      - description: The number of allele call results (marker/allele pairs) to be
          returned in the response. If multiple experiments are requested, some responses
          will contain the last results from one experiment followed by the first
          results from the next.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Required if `pageSize` is given; and requires that `pageSize`
          be given. The page indexing starts at 0 (the first page is 'page'=0)
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - analysisMethod: GoldenGate
                  extractDbId: '3939'
                  germplasmDbId: '2374'
                  markerprofileDbId: '993'
                  resultCount: 1470
                  sampleDbId: '3937'
                  uniqueDisplayName: MyFancyGermplasm
                - analysisMethod: GBS
                  extractDbId: '3939'
                  germplasmDbId: '2374'
                  markerprofileDbId: '994'
                  resultCount: 1470
                  sampleDbId: '1234'
                  uniqueDisplayName: Germplasm2
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  $ref: '#/definitions/markerprofileDescription'
                type: array
            type: object
      summary: Retrieve Markerprofile Ids
      tags:
      - Marker profiles
  /brapi/v1/markerprofiles/{markerprofileDbId}:
    get:
      description: "**Scope**:GENOTYPING.\n**Status**: ACCEPTED.\n**Implemented by**:\
        \ Germinate, Cassavabase\n</br>\nFor the requested markerprofile ID, returns\
        \ the allele call for each marker. \n[Example](http://malt.pw.usda.gov/t3/wheatplus/brapi/v1/markerprofiles/1784_99/count?analysisMethod=GoldenGate)\n\
        </br>\n**Allele encodings**\n\n- Unknown data will by default be encoded by\
        \ \"N\"\n- Homozygotes are returned as a single occurance, e.g. AA -> A, GG\
        \ -> G\n- Phased heterozygotes are by default separated by a pipe (\"|\")\
        \ and unphased heterozygotes are by default separated by a forward slash (\"\
        /\")\n- Dominant markers such as DArTs: 1 for present, 0 for absent\n\n**Parameters**\n\
        - If the user would like to use an empty string (\"\") for any of the parameters,\
        \ the value should be set to the reserved word \"empty_string\", e.g. sepUnphased=empty_string.\n\
        \n**Open issue:**\nThe pages of data will need to be sorted sensibly in order\
        \ for the\nrequested page to be delivered consistently.  By map or genome\
        \ position?\nAlphabetically?'"
      parameters:
      - description: The server's internal id for the markerprofile
        in: path
        name: markerprofileDbId
        required: true
        type: string
      - description: Should homozygotes NOT be collapsed into a single orrucance?
        in: query
        name: expandHomozygotes
        required: false
        type: boolean
      - description: The string to use as a representation for missing data or the
          reserved word "empty_string".
        in: query
        name: unknownString
        required: false
        type: string
      - description: The string to use as a separator for phased allele calls or the
          reserved word "empty_string".
        in: query
        name: sepPhased
        required: false
        type: string
      - description: The string to use as a separator for unphased allele calls or
          the reserved word "empty_string".
        in: query
        name: sepUnphased
        required: false
        type: string
      - description: The number of allele call results (marker/allele pairs) to be
          returned in the response. If multiple experiments are requested, some responses
          will contain the last results from one experiment followed by the first
          results from the next.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Required if `pageSize` is given; and requires that `pageSize`
          be given. The page indexing starts at 0 (the first page is 'page'=0)
        in: query
        name: page
        required: false
        type: integer
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  $ref: '#/definitions/markerProfile'
                type: array
            type: object
      summary: Alleles By Markerprofile Id
      tags:
      - Marker profiles
  /brapi/v1/markers:
    get:
      deprecated: true
      description: ''
      parameters:
      - description: The name or synonym.
        in: query
        name: name
        required: false
        type: string
      - description: 'Possible values are ''case_insensitive'', ''exact''

          (case sensitive), ''wildcard'' (which is case insensitive). Wildcard uses
          both ''*'' and ''%'' for any number of characters

          and ''?'' for one character matching. Default is exact.'
        in: query
        name: matchMethod
        required: false
        type: string
      - description: Whether to include synonyms in the output.
        in: query
        name: include
        required: false
        type: string
      - description: The type of the marker.
        in: query
        name: type
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                data:
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_10002'
                  markerDbId: '1185'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_10002
                  - POPA1_0002
                  type: SNP
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_11159'
                  markerDbId: '1186'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_11159
                  - POPA1_1159
                  type: SNP
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/marker'
                    type: array
                type: object
            type: object
      summary: Markers Search (/brapi/v1/markers)
      tags:
      - Markers
  /brapi/v1/markers-search:
    get:
      description: ''
      parameters:
      - description: The database IDs of the markers to search for
        in: query
        items:
          type: string
        name: markerDbIds
        required: false
        type: array
      - description: 'The search pattern for a marker name or synonym. Examples: "11_10002"
          "11_1%" "11_1*" "11_10?02"'
        in: query
        name: name
        required: false
        type: string
      - description: 'Possible values are ''case_insensitive'', ''exact''

          (case sensitive), ''wildcard'' (which is case insensitive). Wildcard uses
          both ''*'' and ''%'' for any number of characters

          and ''?'' for one character matching. Default is exact.'
        in: query
        name: matchMethod
        required: false
        type: string
      - description: Whether to include synonyms in the output.
        in: query
        name: includeSynonyms
        required: false
        type: boolean
      - description: The type of the marker.
        in: query
        name: type
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_10002'
                  markerDbId: '1185'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_10002
                  - POPA1_0002
                  type: SNP
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_11159'
                  markerDbId: '1186'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_11159
                  - POPA1_1159
                  type: SNP
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/marker'
                    type: array
                type: object
            type: object
      summary: Markers Search (GET)
      tags:
      - Markers
    post:
      description: ''
      parameters:
      - description: The database IDs of the markers to search for
        in: query
        items:
          type: string
        name: markerDbIds
        required: false
        type: array
      - description: 'The search pattern for a marker name or synonym. Examples: "11_10002"
          "11_1%" "11_1*" "11_10?02"'
        in: query
        name: name
        required: false
        type: string
      - description: 'Possible values are ''case_insensitive'', ''exact''

          (case sensitive), ''wildcard'' (which is case insensitive). Wildcard uses
          both ''*'' and ''%'' for any number of characters

          and ''?'' for one character matching. Default is exact.'
        in: query
        name: matchMethod
        required: false
        type: string
      - description: Whether to include synonyms in the output.
        in: query
        name: includeSynonyms
        required: false
        type: boolean
      - description: The type of the marker.
        in: query
        name: type
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_10002'
                  markerDbId: '1185'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_10002
                  - POPA1_0002
                  type: SNP
                - analysisMethods:
                  - illumina
                  - kasp
                  defaultDisplayName: '11_11159'
                  markerDbId: '1186'
                  refAlt:
                  - A
                  - T
                  synonyms:
                  - i_11_11159
                  - POPA1_1159
                  type: SNP
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/marker'
                    type: array
                type: object
            type: object
      summary: Markers Search (GET)
      tags:
      - Markers
  /brapi/v1/markers/{locationDbId}:
    get:
      description: "**Implemented by:**  GnpIS\n\nGet details for a location.\n\n\
        \  * The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)\
        \ spec.\n  * `altitude` is in meters."
      parameters:
      - description: The internal DB id for a location
        in: path
        name: locationDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                $ref: '#/definitions/location'
            type: object
      summary: The internal DB id for a location
      tags:
      - Locations
  /brapi/v1/markers/{markerDbId}:
    get:
      description: "**Status**: ACCEPTED \n**Implemented By**:"
      parameters:
      - description: the internal id of the marker
        in: path
        name: markerDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                $ref: '#/definitions/marker'
            type: object
      summary: Marker Details by id
      tags:
      - Markers
  /brapi/v1/observationLevels:
    get:
      description: ''
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - plant
                - plot
          headers: {}
      summary: '**Deprecated** List observation levels'
      tags: []
  /brapi/v1/ontologies:
    get:
      description: "Call to retrieve a list of observation variable ontologies available\
        \ in the system. <br>\n**Scope:** CORE. \n**Status:** ACCEPTED."
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - authors: J. Snow, H. Peterson
                  copyright: "\xA9 2016, INRA"
                  description: developped for European genetic studies projects
                  licence: CC BY-SA 4.0
                  ontologyDbId: CO_334
                  ontologyName: Wheat ontology
                  version: v1.2
                - authors: J. Doe
                  copyright: null
                  description: developped for IRRI and amended with partners needs
                  licence: null
                  ontologyDbId: CO_335
                  ontologyName: Rice ontology
                  version: v2
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/ontology'
                    type: array
                type: object
            type: object
      summary: Variable ontology list
      tags:
      - Group Observation Variables
  /brapi/v1/phenotypes:
    post:
      description: 'Call to invoke for saving the measurements (observations) collected
        from field for all the observation units.


        Observation timestamp should be ISO 8601 https://www.w3.org/TR/NOTE-datetime


        In case where JSON data is zipped for faster transfer speed (as in the case
        of the IRRI handheld implementation), the zipped JSON file will be listed
        in datafiles. The zipped file contains a JSON file with the same structure
        as the BrAPI call. In this case a format parameter should be passed as well.


        Images can be optionally be uploaded using this call by providing a zipfile
        of all images in the datafiles, along with the actual zipfile in multi-part
        form data.


        Scope: PHENOYTPING.'
      parameters:
      - description: In case where JSON data is zipped for faster transfer speed (as
          in the case of the IRRI handheld implementation), the zipped JSON file will
          be listed in datafiles. The zipped file contains a JSON file with the same
          structure as the BrAPI call.
        in: query
        name: format
        required: true
        schema:
          type: string
      - in: body
        name: body
        schema:
          properties:
            metadata:
              properties:
                datafiles:
                  items:
                    type: string
                  type: array
                pagination:
                  properties:
                    currentPage:
                      type: number
                    pageSize:
                      type: number
                    totalCount:
                      type: number
                    totalPages:
                      type: number
                  type: object
                status:
                  items: {}
                  type: array
              type: object
            result:
              properties:
                commit:
                  type: string
                data:
                  items:
                    properties:
                      observatioUnitDbId:
                        type: string
                      observations:
                        items:
                          properties:
                            collector:
                              type: string
                            observationTimeStamp:
                              type: string
                            observationVariableDbId:
                              type: string
                            observationVariableName:
                              type: string
                            value:
                              type: string
                          required:
                          - observationVariableDbId
                          - observationVariableName
                          - collector
                          - observationTimeStamp
                          - value
                          type: object
                        type: array
                      studyDbId:
                        type: number
                    required:
                    - observatioUnitDbId
                    - studyDbId
                    - observations
                    type: object
                  type: array
                transactionDbId:
                  type: string
              type: object
          type: object
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
        '400':
          description: Bad Request
          examples:
            application/json:
              metadata:
                status:
                - code: '42'
                  message: Could not update values for phenotypes
          headers: {}
      summary: Save Observation Unit Phenotypes
      tags: []
  /brapi/v1/phenotypes-search:
    post:
      description: 'observationTimeStamp : Iso Standard 8601.

        observationValue data type inferred from the ontology'
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 1
                  pageSize: 100
                  totalCount: 102
                  totalPages: 2
                status: []
              result:
                data:
                - X: '5'
                  Y: '15'
                  blockNumber: '2'
                  entryNumber: null
                  entryType: null
                  germplasmDbId: doi:10.155454/12349537E12
                  germplasmName: IR-8
                  observationLevel: plot
                  observationLevels: bloc:2,subBloc:1,plot:2016-Maugio-34-575-abc-123
                  observationUnitDbId: 2016-Maugio-34-575-abc-123
                  observationUnitName: 2016-Maugio-34-575
                  observationUnitXref:
                  - id: SAMEA179865230
                    source: biosampleEBI
                  - id: INRA:CoeSt6 _SMH03
                    source: gnpis.lot
                  - id: '239865'
                    source: kernelDB
                  observations:
                  - collector: Mr. Technician
                    observationDbId: '153453453'
                    observationTimeStamp: 2015-06-16T00:53:26-0800
                    observationVariableDbId: CO_321:0000045
                    observationVariableName: Plant_height
                    season: '2015'
                    value: '45'
                  - collector: Mr. Technician
                    observationDbId: '23453454345'
                    observationTimeStamp: 2015-06-16T00:53:26-0800
                    observationVariableDbId: CO_321:0000996
                    observationVariableName: GW100_g
                    season: '2015'
                    value: '3'
                  plantNumber: null
                  plotNumber: 2016-Maugio-34-575-abc-123
                  programName: Whealbi
                  replicate: null
                  studyDbId: YieldStudy2015-5
                  studyLocation: Montpellier
                  studyLocationDbId: mtp-north-32
                  studyName: Yield wheat 2015
                  treatments:
                  - factor: water regimen
                    modality: water deficit
                - X: null
                  Y: null
                  blockNumber: null
                  entryNumber: null
                  entryType: null
                  germplasmDbId: doi:10.155499/12349537E00
                  germplasmName: ZE-45
                  observationLevel: plant
                  observationLevels: null
                  observationUnitDbId: '45204'
                  observationUnitName: 2010-Cornell-37-99
                  observations:
                  - collector: Mr. Technician
                    observationDbId: '153453453'
                    observationTimeStamp: 2010-06-16T00:53:26-0800
                    observationVariableDbId: CO_321:0000045
                    observationVariableName: Plant_height
                    season: '2010'
                    value: '45'
                  - collector: Mr. Technician
                    observationDbId: '23453454345'
                    observationTimeStamp: 2010-06-16T00:53:26-0800
                    observationVariableDbId: CO_321:0000996
                    observationVariableName: GW100_g
                    season: '2010'
                    value: '3'
                  plantNumber: '45204'
                  plotNumber: null
                  programName: Wheat for futur
                  replicate: '2'
                  studyDbId: YieldStudy2010-5
                  studyLocation: Cornell
                  studyLocationDbId: '88484'
                  studyName: Yield wheat 2010
                  treatments: []
          headers: {}
      summary: Phenotype Search
      tags: []
  /brapi/v1/programs-search:
    post:
      description: ''
      parameters:
      - in: body
        name: body
        schema:
          properties:
            abbreviation:
              type: string
            leadPerson:
              type: string
            name:
              type: string
            objective:
              type: string
            page:
              type: number
            pageSize:
              type: number
            programDbId:
              type: string
          type: object
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - abbreviation: DRP1
                  leadPerson: Dr. Henry Beachell
                  name: Wheat Resistance Program
                  objective: Disease resistance
                  programDbId: '123'
                - abbreviation: DRP2
                  leadPerson: Dr. Norman Borlaug
                  name: Wheat Improvement Program
                  objective: Yield improvement
                  programDbId: '456'
          headers: {}
      summary: Search Programs
      tags: []
  /brapi/v1/samples:
    put:
      description: Call to register the event of a sample being taken. Sample ID is
        assigned as a result of the operation and returned in response.
      parameters: []
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Add a sample
      tags: []
  /brapi/v1/samples-search:
    post:
      description: ''
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - germplasmDbId: def456
                  notes: Cut from infected leaf
                  observationUnitDbId: abc123
                  plantDbId: PlantID-123
                  plateDbId: PlateID-123
                  plateIndex: 0
                  plotDbId: PlotId-123
                  sampleDbId: Unique-Plant-SampleID-1
                  sampleTimestamp: 2016-07-27T14:43:22+0100
                  sampleType: TypeOfSample
                  studyDbId: StudyId-123
                  takenBy: Mr. Technician
                  tissueType: TypeOfTissue
                - germplasmDbId: def456
                  notes: Cut from infected leaf
                  observationUnitDbId: a1b2c3
                  plantDbId: PlantID-123
                  plateDbId: PlateID-123
                  plateIndex: 0
                  plotDbId: PlotId-123
                  sampleDbId: Unique-Plant-SampleID-2
                  sampleTimestamp: 2016-07-27T14:43:22+0100
                  sampleType: TypeOfSample
                  studyDbId: StudyId-123
                  takenBy: Mr. Technician
                  tissueType: TypeOfTissue
          headers: {}
      summary: Post Sample Search
      tags: []
  /brapi/v1/studies/{studyDbId}/observationunits:
    put:
      description: 'Use this call for uploading new Observations as JSON to a system.


        Note: If ''observationUnitDbId'' or ''observationDbId'' is populated, they
        should be considered updates to existing records. If an existing record of
        that DbId is not found, the document should be treated as new records and
        assigned new DbIds. If ''observationUnitDbId'' or ''observationDbId'' is un-populated
        (empty string or null) the document should be treated as new records and assigned
        new DbIds.'
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                status:
                - code: '1'
                  message: Upload Successful
              results:
                observationUnitDbIds:
                - 123abc
                - 456def
          headers: {}
        '400':
          description: Bad Request
          examples:
            application/json:
              metadata:
                status:
                - code: '42'
                  message: Could not update values for Observation Units
          headers: {}
      summary: Save Observation Unit Phenotypes
      tags: []
  /brapi/v1/studies/{studyDbId}/table:
    post:
      description: 'Images can optionally be saved using this call by providing a
        zipped file of all images in the datafiles. The physical zipped file should
        be transferred as well in the mulit-part form data.


        Scope: PHENOTYPING'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Save study Observation Units as table
      tags: []
  /brapi/v1/studyTypes:
    get:
      description: ''
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 3
                  totalPages: 1
                status: []
              result:
                data:
                - description: Description for Nursery study type
                  name: Crossing Nursery
                - description: Description for Trial study type
                  name: Yield Trial
                - description: Description for Genotyping study type
                  name: Genotype
          headers: {}
      summary: '**Deprecated** List study types'
      tags: []
  /brapi/v1/token:
    delete:
      description: ''
      parameters: []
      responses:
        '201':
          description: Created
          examples: {}
          headers: {}
      summary: Logout
      tags: []
    post:
      description: ''
      parameters: []
      produces:
      - application/json
      responses:
        '201':
          description: Created
          examples:
            application/json:
              access_token: R6gKDBRxM4HLj6eGi4u5HkQjYoIBTPfvtZzUD8TUzg4
              expires_in: The lifetime in seconds of the access token
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              userDisplayName: John Smith
          headers: {}
      summary: Login
      tags: []
  /brapi/v1/variables:
    get:
      description: 'Call to retrieve a list of observationVariables available in the
        system. <br>

        **Scope:** CORE.

        **Status:** ACCEPTED.'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      - description: Variable's trait class (phenological, physiological, morphological,
          etc.)
        in: query
        name: traitClass
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - defaultValue: null
                  method: null
                  name: CT_M_C
                  observationVariableDbId: CO_334:0100632
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale: null
                  trait:
                    name: Canopy temperature
                    traitDbId: CO_334:0100630
                - contextOfUse:
                  - Trial evaluation
                  - Nursery evaluation
                  crop: Cassava
                  defaultValue: null
                  growthStage: mature
                  institution: ''
                  language: EN
                  method:
                    class: Estimation
                    description: Assessment of the level of yellowness in cassava
                      storage root pulp using the tc chart
                    formula: null
                    methodDbId: CO_334:0010320
                    name: Visual Rating:total carotenoid by chart_method
                    reference: null
                  name: caro_spectro
                  observationVariableDbId: CO_334:0100622
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale:
                    datatype: Numeric
                    decimalPlaces: 2
                    name: ug/g
                    scaleDbId: CO_334:0100526
                    validValues:
                      categories:
                      - 1=low
                      - 2=medium
                      - 3=high
                      max: 3
                      min: 1
                    xref: null
                  scientist: ''
                  status: recommended
                  submissionTimestamp: 2016-05-13T17:43:11+0100
                  synonyms:
                  - Carotenoid content by spectro
                  trait:
                    alternativeAbbreviations:
                    - CCS
                    attribute: carotenoid
                    class: physiological trait
                    description: Cassava storage root pulp carotenoid content
                    entity: root
                    mainAbbreviation: CC
                    name: Carotenoid content
                    status: recommended
                    synonyms:
                    - carotenoid content measure
                    traitDbId: CO_334:0100620
                    xref: TL_455:0003023
                  xref: TL_455:0003001
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/observation variable'
                    type: array
                type: object
            type: object
      summary: Variable list
      tags:
      - Group Observation Variables
  /brapi/v1/variables-search:
    post:
      description: 'Search observation variables.

        See <a href="https://brapi.docs.apiary.io/#introduction/search-services">Search
        Services</a> for additional implementation details. <br>

        **Scope:** CORE.

        **Status:** ACCEPTED.'
      parameters:
      - in: body
        name: body
        schema:
          properties:
            datatypes:
              items:
                type: string
              type: array
            methodDbIds:
              items:
                type: string
              type: array
            names:
              items:
                type: string
              type: array
            observationVariableDbIds:
              items:
                type: string
              type: array
            ontologyDbIds:
              items:
                type: string
              type: array
            ontologyXrefs:
              items:
                type: string
              type: array
            page:
              type: number
            pageSize:
              type: number
            scaleDbIds:
              items:
                type: string
              type: array
            traitClasses:
              items:
                type: string
              type: array
          type: object
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 2
                  totalCount: 300
                  totalPages: 150
                status: []
              result:
                data:
                - defaultValue: null
                  method: null
                  name: CT_M_C
                  observationVariableDbId: CO_334:0100632
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale: null
                  trait:
                    name: Canopy temperature
                    traitDbId: CO_334:0100630
                - contextOfUse:
                  - Trial evaluation
                  - Nursery evaluation
                  crop: Cassava
                  defaultValue: null
                  growthStage: mature
                  institution: ''
                  language: EN
                  method:
                    class: Estimation
                    description: Assessment of the level of yellowness in cassava
                      storage root pulp using the tc chart
                    formula: null
                    methodDbId: CO_334:0010320
                    name: Visual Rating:total carotenoid by chart_method
                    reference: null
                  name: caro_spectro
                  observationVariableDbId: CO_334:0100622
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale:
                    datatype: Numeric
                    decimalPlaces: 2
                    name: ug/g
                    scaleDbId: CO_334:0100526
                    validValues:
                      categories:
                      - 1=low
                      - 2=medium
                      - 3=high
                      max: 3
                      min: 1
                    xref: null
                  scientist: ''
                  status: recommended
                  submissionTimestamp: 2016-05-13T23:21:56+0100
                  synonyms:
                  - Carotenoid content by spectro
                  trait:
                    alternativeAbbreviations:
                    - CCS
                    attribute: carotenoid
                    class: physiological trait
                    description: Cassava storage root pulp carotenoid content
                    entity: root
                    mainAbbreviation: CC
                    name: Carotenoid content
                    status: recommended
                    synonyms:
                    - carotenoid content measure
                    traitDbId: CO_334:0100620
                    xref: TL_455:0003023
                  xref: TL_455:0003001
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      $ref: '#/definitions/observation variable'
                    type: array
                type: object
      summary: Variable search
      tags:
      - Group Observation Variables
  /brapi/v1/variables/datatypes:
    get:
      description: Call to retrieve a list of data types the variable can have.
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 6
                  totalPages: 1
                status: []
              result:
                data:
                - Numeric
                - Categorical
                - Date
                - Text
                - Picture
                - Boolean
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                properties:
                  data:
                    items:
                      type: string
                    type: array
                type: object
      summary: Variable data type list
      tags:
      - Group Observation Variables
  /brapi/v1/variables/{observationVariableDbId}:
    get:
      description: 'Retrieve variable details <br>

        **Scope:** CORE

        **Status:** ACCEPTED'
      parameters:
      - description: string id of the variable
        in: path
        name: observationVariableDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                contextOfUse:
                - Trial evaluation
                - Nursery evaluation
                crop: Cassava
                defaultValue: null
                growthStage: mature
                institution: ''
                language: EN
                method:
                  class: Estimation
                  description: Assessment of the level of yellowness in cassava storage
                    root pulp using the tc chart
                  formula: null
                  methodDbId: CO_334:0010320
                  name: Visual Rating:total carotenoid by chart_method
                  reference: null
                name: caro_spectro
                observationVariableDbId: CO_334:0100622
                ontologyDbId: CO_334
                ontologyName: Cassava
                scale:
                  dataType: Numeric
                  decimalPlaces: 2
                  name: ug/g
                  scaleDbId: CO_334:0100526
                  validValues:
                    categories:
                    - 1=low
                    - 2=medium
                    - 3=high
                    max: 3
                    min: 1
                  xref: null
                scientist: ''
                status: recommended
                submissionTimestamp: 2016-05-13T15:43:41+0100
                synonyms:
                - Carotenoid content by spectro
                trait:
                  alternativeAbbreviations:
                  - CCS
                  attribute: carotenoid
                  class: physiological trait
                  description: Cassava storage root pulp carotenoid content
                  entity: root
                  mainAbbreviation: CC
                  name: Carotenoid content
                  status: recommended
                  synonyms:
                  - carotenoid content measure
                  traitDbId: CO_334:0100620
                  xref: TL_455:0003023
                xref: TL_455:0003001
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                $ref: '#/definitions/observation variable'
            type: object
      summary: Variable details by id
      tags:
      - Group Observation Variables
  /brapi/v1/vendor/plate-search:
    post:
      description: ''
      parameters:
      - in: body
        name: body
        schema:
          properties:
            clientPlateDbIds:
              items:
                type: string
              type: array
            page:
              type: number
            pageSize:
              type: number
            sampleInfo:
              type: string
            vendorPlateDbIds:
              items:
                type: string
              type: array
            vendorProjectDbIds:
              items:
                type: string
              type: array
          type: object
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Search for plates
      tags: []
  /brapi/v1/vendor/plates:
    post:
      description: 'Note: if the samples array is empty, plate ID will be returned.
        Samples can be updated later.'
      parameters:
      - in: body
        name: body
        schema:
          properties:
            plates:
              items:
                properties:
                  clientPlateDbId:
                    type: string
                  plateFormat:
                    type: string
                  sampleType:
                    type: string
                  samples:
                    items:
                      properties:
                        column:
                          type: string
                        concentration:
                          type: string
                        row:
                          type: string
                        sampleDbId:
                          type: string
                        taxonId:
                          properties:
                            sourceName:
                              type: string
                            taxonId:
                              type: string
                          type: object
                        tissueType:
                          type: string
                        volume:
                          type: string
                        well:
                          type: string
                      type: object
                    type: array
                  vendorProjectDbId:
                    type: string
                type: object
              type: array
          type: object
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Register plates
      tags: []
  /calls:
    get:
      description: "**Status** : ACCEPTED\n**Implemented by**: Germinate, Cassavabase\n\
        **Used by**: Flapjack\n**Note on the call response**\nHaving a consistent\
        \ structure for the path string of each call is very important for teams to\
        \ be able to connect and find errors. Read more on [Github](https://github.com/plantbreeding/API/issues/144).\n\
        Here are the rules for the path of each call that should be returned \n- Every\
        \ word in the call path should match the documentation exactly, both in spelling\
        \ and   capitalization. Note that path strings are all lower case, but path\
        \ parameters are camel case.\n- Each path should start relative to '/brapi/v1/'\
        \ and therefore should not include '/brapi/v1/'\n- No leading or trailing\
        \ slashes ('/')\n- Path parameters are wrapped in curly braces ('{}'). The\
        \ name of the path parameter should be spelled exactly as it is specified\
        \ in the documentation.\n|Examples||\n|--|--|\n| **GOOD** |\"call\": \"germplasm/{germplasmDbId}/markerprofiles\"\
        \ |\n| BAD |\"call\": \"germplasm/{**id**}/markerprofiles\" |\n| BAD |\"call\"\
        : \"germplasm/{germplasmDbId}/marker**P**rofiles\" |\n| BAD |\"call\": \"\
        germplasm/{germplasm**dbid**}/markerprofiles\" |\n| BAD |\"call\": \"**/brapi/v1**/germplasm/{germplasmDbId}/markerprofiles\"\
        \ |\n| BAD |\"call\": \"**/g**ermplasm/{germplasmDbId}/markerprofiles **/\"\
        ** |\n| BAD |\"call\": \"germplasm/**\\<germplasmDbId\\>**/markerprofiles\"\
        \ |\n<a>example.com/brapi/v1/calls</a>"
      parameters:
      - description: The data type supported by the call
        in: query
        name: datatype
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 8
                  totalPages: 1
              result:
                data:
                - call: token
                  datatypes:
                  - json
                  methods:
                  - POST
                  - DELETE
                - call: calls
                  datatypes:
                  - json
                  methods:
                  - GET
                - call: allelematrix
                  datatypes:
                  - json
                  - tsv
                  methods:
                  - GET
                  - POST
                - call: observationLevels
                  datatypes:
                  - json
                  methods:
                  - GET
                - call: germplasm-search
                  datatypes:
                  - json
                  methods:
                  - GET
                  - POST
                - call: germplasm/{germplasmDbId}
                  datatypes:
                  - json
                  methods:
                  - GET
                - call: germplasm/{germplasmDbId}/pedigree
                  datatypes:
                  - json
                  methods:
                  - GET
                - call: germplasm/{germplasmDbId}/markerprofiles
                  datatypes:
                  - json
                  methods:
                  - GET
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                $ref: '#/definitions/call'
            type: object
      summary: Call search
      tags:
      - Calls
  /crops:
    get:
      description: '


        <a>example.com/brapi/v1/crops</a>'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 3
                  totalPages: 1
                status: []
              result:
                data:
                - maize
                - wheat
                - rice
          headers: {}
          schema:
            properties:
              metadata:
                $ref: '#/definitions/metadata'
              result:
                items:
                  description: supported crop
                  type: string
                type: array
            type: object
      summary: List supported crops
      tags:
      - Crops
  /germplasm-search:
    get:
      description: 'Use GET when parameter size is less than 2K bytes.


        <a>example.com/brapi/v1/germplasm-search</a>'
      parameters:
      - description: Permanent unique identifier (DOI, URI, etc.)
        in: query
        name: germplasmPUI
        required: false
        type: string
      - description: Internal database identifier
        in: query
        name: germplasmDbId
        required: false
        type: string
      - description: Name of the germplasm
        in: query
        name: germplasmName
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - accessionNumber: ITC0609
                  acquisitionDate: '1947-01-31'
                  biologicalStatusOfAccessionCode: 412
                  commonCropName: banana
                  countryOfOriginCode: UNK
                  defaultDisplayName: Pahang
                  donors:
                  - donorAccessionNumber: ''
                    donorInstituteCode: ''
                    germplasmPUI: ''
                  genus: Musa
                  germplasmDbId: 01BEL084609
                  germplasmName: Pahang
                  germplasmPUI: http://www.crop-diversity.org/mgis/accession/01BEL084609
                  germplasmSeedSource: Female GID:4/Male GID:4
                  instituteCode: 01BEL084
                  instituteName: ITC
                  pedigree: TOBA97/SW90.1057
                  species: acuminata
                  speciesAuthority: ''
                  subtaxa: sp malaccensis var pahang
                  subtaxaAuthority: ''
                  synonyms: []
                  taxonIds:
                  - sourceName: ncbiTaxon
                    taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                  - sourceName: ciradTaxon
                    taxonId: 23-E
                  typeOfGermplasmStorageCode:
                  - 10
                - accessionNumber: ITC0685
                  acquisitionDate: '1977-01-31'
                  biologicalStatusOfAccessionCode: 412
                  commonCropName: banana
                  countryOfOriginCode: UNK
                  defaultDisplayName: Pah
                  donors:
                  - donorAccessionNumber: ''
                    donorInstituteCode: ''
                    germplasmPUI: ''
                  genus: Musa
                  germplasmDbId: 03REL084609
                  germplasmName: Pah
                  germplasmPUI: doi:10.15454/328757862534E12
                  germplasmSeedSource: Female GID:4/Male GID:4
                  instituteCode: 01BEL084
                  instituteName: ITC
                  pedigree: TOBA97/SW90.1057
                  species: acuminata
                  speciesAuthority: ''
                  subtaxa: sp malaccensis var pah
                  subtaxaAuthority: ''
                  synonyms: []
                  taxonIds:
                  - sourceName: ncbiTaxon
                    taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                  - sourceName: ciradTaxon
                    taxonId: 23-E
                  typeOfGermplasmStorageCode:
                  - 10
          headers: {}
      summary: Germplasm search through GET
      tags:
      - germplasm
      - search
  /germplasm/{germplasmDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/germplasm/{germplasmDbId}</a>'
      parameters:
      - description: The internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                accessionNumber: ITC0609
                acquisitionDate: '1947-01-31'
                biologicalStatusOfAccessionCode: 412
                commonCropName: banana
                countryOfOriginCode: UNK
                defaultDisplayName: Pahang
                donors:
                - donorAccessionNumber: ''
                  donorGermplasmPUI: ''
                  donorInstituteCode: ''
                genus: Musa
                germplasmDbId: 01BEL084609
                germplasmName: Pahang
                germplasmPUI: http://www.crop-diversity.org/mgis/accession/01BEL084609
                instituteCode: 01BEL084
                instituteName: ITC
                pedigree: TOBA97/SW90.1057
                seedSource: ITC0609-2016-77
                species: acuminata
                speciesAuthority: ''
                subtaxa: sp malaccensis var pahang
                subtaxaAuthority: ''
                synonyms: []
                taxonIds:
                - sourceName: ncbiTaxon
                  taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                - sourceName: ciradTaxon
                  taxonId: 23-E
                typeOfGermplasmStorageCode:
                - 10
          headers: {}
      summary: Germplasm search by germplasmDbId
      tags:
      - germplasm
  /germplasm/{germplasmDbId}/attributes:
    get:
      description: 'Values for all attributes by default.


        <a>example.com/brapi/v1/germplasm/{germplasmDbId}/attributes</a>'
      parameters:
      - description: The germplasm characterized
        in: path
        name: germplasmDbId
        required: true
        type: string
      - description: Restrict the response to only the listed attributeDbIds.
        in: query
        items:
          type: string
        name: attributeList
        required: false
        type: array
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 1
                  totalPages: 1
                status: []
              result:
              - data:
                - attributeCode: RHT
                  attributeDbId: '1'
                  attributeName: Rht-B1b
                  determinedDate: '2007-05-28'
                  value: Present
                germplasmDbId: '993'
          headers: {}
      summary: Germplasm attribute values
      tags:
      - germplasm
  /germplasm/{germplasmDbId}/markerprofiles:
    get:
      description: '


        <a>example.com/brapi/v1/germplasm/{germplasmDbId}/markerprofiles</a>'
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Markerprofiles by germplasmDbId
      tags:
      - germplasm
  /germplasm/{germplasmDbId}/pedigree:
    get:
      description: '


        <a>example.com/brapi/v1/germplasm/{germplasmDbId}/pedigree</a>'
      parameters:
      - description: the internal id of the germplasm
        in: path
        name: germplasmDbId
        required: true
        type: string
      - description: text representation of the pedigree
        in: query
        name: notation
        required: false
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Germplasm pedigree by id
      tags:
      - germplasm
  /observationlevels:
    get:
      description: '


        <a>example.com/brapi/v1/observationlevels</a>'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - plant
                - plot
          headers: {}
      summary: Get Observation Levels
      tags:
      - observationlevels
  /programs:
    get:
      description: '


        <a>example.com/brapi/v1/programs</a>'
      parameters:
      - description: Filter by program name. Exact match.
        in: query
        name: programName
        required: false
        type: string
      - description: Filter by program abbreviation. Exact match.
        in: query
        name: abbreviation
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - abbreviation: DRP1
                  leadPerson: Dr. Henry Beachell
                  name: Wheat Resistance Program
                  objective: Disease resistance
                  programDbId: '123'
                - abbreviation: DRP2
                  leadPerson: Dr. Norman Borlaug
                  name: Wheat Improvement Program
                  objective: Yield improvement
                  programDbId: '456'
          headers: {}
      summary: List programs
      tags:
      - programs
  /samples-search:
    get:
      description: '


        <a>example.com/brapi/v1/samples-search</a>'
      parameters:
      - description: the internal DB id for a sample
        in: query
        name: sampleDbId
        required: false
        type: string
      - description: the internal DB id for an observation unit where a sample was
          taken from
        in: query
        name: observationUnitDbId
        required: false
        type: string
      - description: the internal DB id for a plate of samples
        in: query
        name: plateDbId
        required: false
        type: string
      - description: the internal DB id for a germplasm
        in: query
        name: germplasmDbId
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - germplasmDbId: def456
                  notes: Cut from infected leaf
                  observationUnitDbId: abc123
                  plantDbId: PlantID-123
                  plateDbId: PlateID-123
                  plateIndex: 0
                  plotDbId: PlotId-123
                  sampleDbId: Unique-Plant-SampleID-1
                  sampleTimestamp: 2016-07-27T14:43:22+0100
                  sampleType: TypeOfSample
                  studyDbId: StudyId-123
                  takenBy: Mr. Technician
                  tissueType: TypeOfTissue
                - germplasmDbId: def456
                  notes: Cut from infected leaf
                  observationUnitDbId: a1b2c3
                  plantDbId: PlantID-123
                  plateDbId: PlateID-123
                  plateIndex: 0
                  plotDbId: PlotId-123
                  sampleDbId: Unique-Plant-SampleID-2
                  sampleTimestamp: 2016-07-27T14:43:22+0100
                  sampleType: TypeOfSample
                  studyDbId: StudyId-123
                  takenBy: Mr. Technician
                  tissueType: TypeOfTissue
          headers: {}
      summary: Get Sample Search
      tags:
      - samples
      - search
  /samples/{sampleDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/samples/{sampleDbId}</a>'
      parameters:
      - description: the internal DB id for a sample
        in: path
        name: sampleDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Get Sample
      tags:
      - samples
  /seasons:
    get:
      description: '


        <a>example.com/brapi/v1/seasons</a>'
      parameters:
      - description: ''
        in: query
        name: year
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - season: Fall
                  seasonDbId: '237'
                  year: '2015'
                - season: Spring
                  seasonDbId: '238'
                  year: '2016'
          headers: {}
      summary: List seasons or years
      tags:
      - seasons
  /studies-search:
    get:
      description: '


        <a>example.com/brapi/v1/studies-search</a>'
      parameters:
      - description: Filter based on study type e.g. Nursery, Trial or Genotype.
        in: query
        name: studyType
        required: false
        type: string
      - description: Program filter to only return studies associated with given program
          id.
        in: query
        name: programDbId
        required: false
        type: string
      - description: Filter by location
        in: query
        name: locationDbId
        required: false
        type: string
      - description: Filter by season or year
        in: query
        name: seasonDbId
        required: false
        type: string
      - description: Filter by trial
        in: query
        name: trialDbId
        required: false
        type: string
      - description: Filter studies where specified germplasm have been used/tested
        in: query
        items:
          type: string
        name: germplasmDbIds
        required: false
        type: array
      - description: Filter studies where specified observation variables have been
          measured
        in: query
        items:
          type: string
        name: observationVariableDbIds
        required: false
        type: array
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      - description: Filter active status true/false.
        in: query
        name: active
        required: false
        type: boolean
      - description: Sort order. Name of the field to sort by.
        in: query
        name: sortBy
        required: false
        type: string
      - description: Sort order direction. Ascending/Descending.
        in: query
        name: sortOrder
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - active: 'true'
                  additionalInfo:
                    property1Name: property1Value
                    property2Name: property2Value
                    property3Name: property3Value
                  endDate: '2008-12-31'
                  locationDbId: '23'
                  locationName: Kenya
                  name: Earlygenerationtesting
                  programDbId: '27'
                  programName: Drought Resistance Program A
                  seasons:
                  - 2007 Spring
                  - 2008 Fall
                  startDate: '2007-06-01'
                  studyDbId: '35'
                  studyType: Trial
                  trialDbId: '7'
                  trialName: InternationalTrialA
                - active: 'true'
                  additionalInfo:
                    property1Name: property1Value
                    property2Name: property2Value
                    property3Name: property3Value
                  endDate: '2008-12-31'
                  locationDbId: '33'
                  locationName: Zimbabwe
                  name: Earlygenerationtesting
                  programDbId: '58'
                  programName: Drought Resistance Program B
                  seasons:
                  - 2007 Spring
                  - 2008 Fall
                  startDate: '2005-06-01'
                  studyDbId: '345'
                  studyType: Trial
                  trialDbId: '7'
                  trialName: InternationalTrialA
          headers: {}
      summary: Search Studies (GET)
      tags:
      - studies
      - search
  /studies/{studyDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}</a>'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Retrieve study details
      tags:
      - studies
  /studies/{studyDbId}/germplasm:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/germplasm</a>'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Study Germplasm Details
      tags:
      - studies
  /studies/{studyDbId}/layout:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/layout</a>'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 1
                  totalPages: 1
                status: []
              result:
                data:
                - X: 20
                  Y: 22
                  additionalInfo: {}
                  blockNumber: 1
                  entryType: check/test/filler
                  germplasmDbId: 143
                  germplasmName: ZIPA_68
                  observationLevel: plot
                  observationUnitDbId: 11
                  observationUnitName: ZIPA_68_Ibadan_2014
                  replicate: 1
                  studyDbId: 1
          headers: {}
      summary: Retrieve plot layout details
      tags:
      - studies
  /studies/{studyDbId}/observationVariables:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/observationVariables</a>'
      parameters:
      - description: string database unique identifier
        in: path
        name: studyDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                data:
                - defaultValue: null
                  method: null
                  name: CT_M_C
                  observationVariableDbId: CO_334:0100632
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale: null
                  trait:
                    name: Canopy temperature
                    traitDbId: CO_334:0100630
                - contextOfUse:
                  - Trial evaluation
                  - Nursery evaluation
                  crop: Cassava
                  date: '2016-05-13'
                  defaultValue: null
                  growthStage: mature
                  institution: ''
                  language: EN
                  method:
                    class: Estimation
                    description: Assessment of the level of yellowness in cassava
                      storage root pulp using the tc chart
                    formula: null
                    methodDbId: CO_334:0010320
                    name: Visual Rating:total carotenoid by chart_method
                    reference: null
                  name: caro_spectro
                  observationVariableDbId: CO_334:0100622
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale:
                    datatype: Numeric
                    decimalPlaces: 2
                    name: ug/g
                    scaleDbId: CO_334:0100526
                    validValues:
                      categories:
                      - 1=low
                      - 2=medium
                      - 3=high
                      max: 3
                      min: 1
                    xref: null
                  scientist: ''
                  status: recommended
                  synonyms:
                  - Carotenoid content by spectro
                  trait:
                    alternativeAbbreviations:
                    - CCS
                    attribute: carotenoid
                    class: physiological trait
                    description: Cassava storage root pulp carotenoid content
                    entity: root
                    mainAbbreviation: CC
                    name: Carotenoid content
                    status: recommended
                    synonyms:
                    - carotenoid content measure
                    traitDbId: CO_334:0100620
                    xref: TL_455:0003023
                  xref: TL_455:0003001
                studyDbId: '123'
                trialName: myBestTrial
          headers: {}
      summary: '**Deprecated** Retrieve study observation variables'
      tags:
      - studies
  /studies/{studyDbId}/observations:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/observations</a>'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      - description: Numeric `id` of that variable (combination of trait, unit and
          method)
        in: query
        items:
          type: string
        name: observationVariableDbIds
        required: true
        type: array
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Get Observation Units by observation variable ids
      tags:
      - studies
  /studies/{studyDbId}/observationunits:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/observationunits</a>'
      parameters:
      - description: The study these observation units are related to.
        in: path
        name: studyDbId
        required: true
        type: string
      - description: The granularity level of observation units. Either `plotNumber`
          or `plantNumber` fields will be relavant depending on whether granularity
          is plot or plant respectively.
        in: query
        name: observationLevel
        required: true
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - X: '1'
                  Y: '1'
                  blockNumber: '1'
                  entryNumber: '1'
                  entryType: Test entry
                  germplasmDbId: '1'
                  germplasmName: IR-8
                  observationLevel: plot
                  observationUnitDbId: abc-123
                  observationUnitName: Test-2016-location-34-575
                  observationUnitXref:
                  - id: SAMEA179865230
                    source: biosampleEBI
                  - id: INRA:CoeSt6 _SMH03
                    source: gnpis.lot
                  - id: '239865'
                    source: kernelDB
                  observations:
                  - collector: Mr. Technician
                    observationDbId: '153453453'
                    observationTimeStamp: '2015-06-16T00:53:26Z'
                    observationVariableDbId: '18020'
                    observationVariableName: Plant_height
                    value: null
                  - collector: Mr. Technician
                    observationDbId: '23453454345'
                    observationTimeStamp: '2015-06-16T00:53:26Z'
                    observationVariableDbId: '51496'
                    observationVariableName: GW100_g
                    value: null
                  pedigree: IR-8-FP/IR-8-MP
                  plantNumber: '0'
                  plotNumber: '1'
                  replicate: '1'
                - X: '1'
                  Y: '2'
                  blockNumber: '2'
                  enrtyNumber: '2'
                  entryType: Check entry
                  germplasmDbId: '2'
                  germplasmName: IR-9
                  observatioUnitDbId: abc-456
                  observationLevel: plot
                  observationUnitName: Test-2016-location-34-456
                  observations:
                  - collector: Mr. Technician
                    observationDbId: '3'
                    observationTimeStamp: '2015-06-16T00:53:26Z'
                    observationVariableDbId: '18020'
                    observationVariableName: Plant_height
                    value: null
                  - collector: Mr. Technician
                    observationDbId: '4'
                    observationTimeStamp: '2015-06-16T00:53:26Z'
                    observationVariableDbId: '51496'
                    observationVariableName: GW100_g
                    value: null
                  pedigree: IR-9-FP/IR-9-MP
                  plantNumber: '0'
                  plotNumber: '2'
                  replicate: '1'
          headers: {}
      summary: Get all observation units
      tags:
      - studies
  /studies/{studyDbId}/observationvariables:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/observationvariables</a>'
      parameters:
      - description: string database unique identifier
        in: path
        name: studyDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                data:
                - defaultValue: null
                  method: null
                  name: CT_M_C
                  observationVariableDbId: CO_334:0100632
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale: null
                  trait:
                    name: Canopy temperature
                    traitDbId: CO_334:0100630
                - contextOfUse:
                  - Trial evaluation
                  - Nursery evaluation
                  crop: Cassava
                  date: '2016-05-13'
                  defaultValue: null
                  growthStage: mature
                  institution: ''
                  language: EN
                  method:
                    class: Estimation
                    description: Assessment of the level of yellowness in cassava
                      storage root pulp using the tc chart
                    formula: null
                    methodDbId: CO_334:0010320
                    name: Visual Rating:total carotenoid by chart_method
                    reference: null
                  name: caro_spectro
                  observationVariableDbId: CO_334:0100622
                  ontologyDbId: CO_334
                  ontologyName: Cassava
                  scale:
                    datatype: Numeric
                    decimalPlaces: 2
                    name: ug/g
                    scaleDbId: CO_334:0100526
                    validValues:
                      categories:
                      - 1=low
                      - 2=medium
                      - 3=high
                      max: 3
                      min: 1
                    xref: null
                  scientist: ''
                  status: recommended
                  synonyms:
                  - Carotenoid content by spectro
                  trait:
                    alternativeAbbreviations:
                    - CCS
                    attribute: carotenoid
                    class: physiological trait
                    description: Cassava storage root pulp carotenoid content
                    entity: root
                    mainAbbreviation: CC
                    name: Carotenoid content
                    status: recommended
                    synonyms:
                    - carotenoid content measure
                    traitDbId: CO_334:0100620
                    xref: TL_455:0003023
                  xref: TL_455:0003001
                studyDbId: '123'
                trialName: myBestTrial
          headers: {}
      summary: Get Observation Variables By Study
      tags:
      - studies
  /studies/{studyDbId}/table:
    get:
      description: '


        <a>example.com/brapi/v1/studies/{studyDbId}/table</a>'
      parameters:
      - description: Identifier of the study. Usually a number, could be alphanumeric.
        in: path
        name: studyDbId
        required: true
        type: string
      - description: The format parameter will cause the data to be dumped to a file
          in the specified format. Currently, tsv and csv are supported.
        in: query
        name: format
        required: false
        type: string
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Retrieve study Observation Units as table
      tags:
      - studies
  /studytypes:
    get:
      description: '


        <a>example.com/brapi/v1/studytypes</a>'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 3
                  totalPages: 1
                status: []
              result:
                data:
                - description: Description for Nursery study type
                  name: Crossing Nursery
                - description: Description for Trial study type
                  name: Yield Trial
                - description: Description for Genotyping study type
                  name: Genotype
          headers: {}
      summary: List study types
      tags:
      - studytypes
  /traits:
    get:
      description: '


        <a>example.com/brapi/v1/traits</a>'
      parameters:
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - defaultValue: null
                  description: Description of Plant Height
                  name: Plant Height
                  observationVariables:
                  - CO_334:0100121
                  - CO_334:0100122
                  - CO_334:0100123
                  traitDbId: '123'
                  traitId: CO:123000007
                - defaultValue: null
                  description: Cassava storage root pulp carotenoid content
                  name: Carotenoid content
                  observationVariables:
                  - CO_334:0100621
                  - CO_334:0100622
                  - CO_334:0100623
                  traitDbId: '123'
                  traitId: CO_334:0100620
          headers: {}
      summary: List all traits
      tags:
      - traits
  /traits/{traitDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/traits/{traitDbId}</a>'
      parameters:
      - description: Id of the trait to retrieve details of.
        in: path
        name: traitDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                defaultValue: null
                description: Description of Plant Height
                name: Plant Height
                observationVariables:
                - CO_334:0100121
                - CO_334:0100122
                - CO_334:0100123
                traitDbId: '123'
                traitId: CO:123000007
          headers: {}
      summary: Retrieve trait details by id
      tags:
      - traits
  /trials:
    get:
      description: '


        <a>example.com/brapi/v1/trials</a>'
      parameters:
      - description: Program filter to only return trials associated with given program
          id.
        in: query
        name: programDbId
        required: false
        type: string
      - description: Filter by location
        in: query
        name: locationDbId
        required: false
        type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      - description: Filter active status true/false.
        in: query
        name: active
        required: false
        type: boolean
      - description: Sort order. Name of the field to sorty by.
        in: query
        name: sortBy
        required: false
        type: string
      - description: 'Sort order direction: asc/desc'
        in: query
        name: sortOrder
        required: false
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 1000
                  totalCount: 2
                  totalPages: 1
                status: []
              result:
                data:
                - active: 'false'
                  additionalInfo:
                    property1Name: property1Value
                    property2Name: property2Value
                    property3Name: property3Value
                  endDate: '2008-12-31'
                  programDbId: '27'
                  programName: International Yield Trial
                  startDate: '2007-06-01'
                  studies:
                  - locationName: Zimbabwe
                    studyDbId: '1'
                    studyName: Zimbabwe Yield Trial
                  - locationName: Kenya
                    studyDbId: '2'
                    studyName: Kenya Yield Trial
                  trialDbId: '1'
                  trialName: InternationalTrialA
                - active: 'true'
                  additionalInfo:
                    property1Name: property1Value
                    property2Name: property2Value
                    property3Name: property3Value
                  endDate: '2009-12-31'
                  programDbId: '35'
                  programName: 'International Yield Trial 2: Return of the Trial'
                  startDate: '2008-06-01'
                  studies:
                  - locationName: Zimbabwe
                    studyDbId: '3'
                    studyName: Zimbabwe Yield Trial
                  - locationName: Kenya
                    studyDbId: '4'
                    studyName: Kenya Yield Trial
                  trialDbId: '2'
                  trialName: InternationalTrialB
          headers: {}
      summary: List of trial summaries
      tags:
      - trials
  /trials/{trialDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/trials/{trialDbId}</a>'
      parameters:
      - description: The internal trialDbId
        in: path
        name: trialDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                active: 'true'
                additionalInfo:
                  property2Name: property2Value
                  property3Name: property3Value
                  publications:
                  - pmid:239823988
                  - doi:10.2345/GEZG3T23535
                contacts:
                - contactDbId: C025
                  email: j.doe@mail.com
                  instituteName: IRRI
                  name: John Doe
                  orcid: 0000-0002-0607-8728
                  type: Scientist
                - contactDbId: C026
                  email: null
                  instituteName: IRRI
                  name: Dave Peters
                  orcid: null
                  type: null
                datasetAuthorship:
                  datasetPUI: doi:10.15454/312953986E3
                  license: https://creativecommons.org/licenses/by/4.0
                endDate: '2008-12-31'
                programDbId: 27
                programName: International Yield Trial
                startDate: '2007-06-01'
                studies:
                - locationDbId: z-2
                  locationName: Zimbabwe
                  studyDbId: 1
                  studyName: Zimbabwe Yield Trial
                - locationDbId: k-1
                  locationName: Kenya
                  studyDbId: 2
                  studyName: Kenya Yield Trial
                trialDbId: 1
                trialName: InternationalTrialA
          headers: {}
      summary: Get trial by Id
      tags:
      - trials
  /vendor/plate-search:
    get:
      description: '


        <a>example.com/brapi/v1/vendor/plate-search</a>'
      parameters:
      - description: ''
        in: query
        name: vendorProjectDbId
        required: false
        type: string
      - description: ''
        in: query
        name: vendorPlateDbId
        required: false
        type: string
      - description: ''
        in: query
        name: clientPlateDbId
        required: false
        type: string
      - description: ''
        in: query
        name: sampleInfo
        required: false
        type: boolean
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        type: integer
      responses:
        '200':
          description: OK
          examples: {}
          headers: {}
      summary: Search for plates
      tags:
      - vendor
  /vendor/plate/{vendorPlateDbId}:
    get:
      description: '


        <a>example.com/brapi/v1/vendor/plate/{vendorPlateDbId}</a>'
      parameters:
      - description: The plate ID defined by the vendor
        in: path
        name: vendorPlateDbId
        required: true
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                clientPlateDbId: def456
                plateFormat: Plate_96
                sampleType: DNA
                samples:
                - column: (optional)
                  concentration: (ng/ul)
                  row: (optional)
                  sampleDbId: sample_name
                  taxonId:
                    sourceName: ncbiTaxon
                    taxonId: http://purl.obolibrary.org/obo/NCBITaxon_4641
                  tissueType: ''
                  volume: (ul)
                  well: (optional)
                status: (not null)
                statusTimeStamp: 2017-06-01 01:57 GMT
                vendorBarcode: ''
                vendorBarcodeImageURL: ''
                vendorPlateDbId: '8338'
                vendorProjectDbId: abc123
          headers: {}
      summary: Plate Details by vendorPlateId
      tags:
      - vendor
  /vendor/specifications:
    get:
      description: '


        <a>example.com/brapi/v1/vendor/specifications</a>'
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: OK
          examples:
            application/json:
              metadata:
                datafiles: []
                pagination:
                  currentPage: 0
                  pageSize: 0
                  totalCount: 0
                  totalPages: 0
                status: []
              result:
                additionalInfo: {}
                contactName: John Doe
                platforms:
                - contactEmail: ''
                  contactName: ''
                  contactPhone: ''
                  deliverables:
                  - description: ''
                    format: ''
                    name: ''
                  platformDescription: ''
                  platformName: GBS
                  platformURL: ''
                  shippingAddress: ''
                  specificRequirements: {}
                  standardRequirements:
                    blankWellPosition:
                      numberOfBlanksPerPlate: ''
                      positions:
                      - random
                      - A01
                      - H12
                    inputFormatDetails: https://...
                    inputFormats:
                    - Plate_96
                    - Tubes
                    maxConcentration: ''
                    maxVolume: ''
                    minConcentration: ''
                    minSampleNumber: ''
                    minVolume: ''
                    plateOrientation: rowFirst|columnFirst
                    sampleTypeDetails: https://...
                    sampleTypes:
                    - ''
                    - ''
                  statuses:
                  - statusDescription: Platesarereceivedbyvendor.
                    statusName: received
                  - statusDescription: Resultfilesareready.
                    statusName: completed
                  - statusDescription: Platesarerejectedbyvendor
                    statusName: rejected
                  taxonomyIdSystem:
                    URI: https://...
                    name: NCBITaxonomyId
                  tissueIdSystem:
                    URI: https://...
                    name: DArT
                vendorAddress: 123 Lane St
                vendorCity: Metropolis
                vendorCountry: USA
                vendorDescription: Gene Sequencing Vendor
                vendorEmail: jdoe@example.org
                vendorName: Gene Sequencing Vendor
                vendorPhone: 1-234-567-8910
                vendorURL: www.example.org
          headers: {}
      summary: Vendor specification
      tags:
      - vendor
swagger: '2.0'
