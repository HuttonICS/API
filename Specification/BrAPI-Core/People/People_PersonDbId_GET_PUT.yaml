info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /people/{personDbId}:
    get:
      description: Get a specific person
      parameters:
      - description: The unique ID of a person
        in: path
        name: personDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  description: Example Person
                  emailAddress: bob@bob.com
                  firstName: Bob
                  lastName: Robertson
                  mailingAddress: 123 Road Street, City, State, Country, 98765
                  middleName: Danger
                  personDbId: person1
                  phoneNumber: '+19876543210'
                  userID: bdr45
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                required:
                - metadata
                - result
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the details for a specific Person
      tags:
      - People
    put:
      description: Update an existing Person
      parameters:
      - description: The unique ID of a person
        in: path
        name: personDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPersonRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result:
                  description: string
                  emailAddress: string
                  firstName: Name
                  lastName: Nameson
                  mailingAddress: string
                  middleName: string
                  personDbId: person1
                  phoneNumber: string
                  userID: string
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                required:
                - metadata
                - result
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update a Person
      tags:
      - People
