info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /images/{imageDbId}:
    get:
      description: 'Get one image meta data object


        Implementation Notes


        - ''imageURL'' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.


        - ''descriptiveOntologyTerm'' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI''s. '
      parameters:
      - description: The unique identifier for a image
        in: path
        name: imageDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result: null
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Get the an image meta data summary
      tags:
      - Images
    put:
      description: "Update an image meta data object\n\nImplementation Notes\n\n- This call should be paired with 'PUT /images/{imageDbId}/imagecontent' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" as an absolute path for retrieving the image, wherever it happens to live. \n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. "
      parameters:
      - description: The unique identifier for a image
        in: path
        name: imageDbId
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newImageRequest'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 0
                    totalCount: 0
                    totalPages: 0
                  status: []
                result: null
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/image'
                title: imageResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
      summary: Update an image meta data
      tags:
      - Images
