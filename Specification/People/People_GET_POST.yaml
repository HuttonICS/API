info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /people:
    get:
      description: Get filtered list of people
      parameters:
      - description: A persons first name
        in: query
        name: firstName
        required: false
        schema:
          type: string
      - description: A persons last name
        in: query
        name: lastName
        required: false
        schema:
          type: string
      - description: The unique ID of a person
        in: query
        name: personDbId
        required: false
        schema:
          type: string
      - description: A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.
        in: query
        name: userID
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                required:
                  - metadata
                  - result
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    required:
                      - data
                    properties:
                      data:
                        description: Array of people
                        items:
                          $ref: '#/components/schemas/person'
                        type: array
                    type: object
                title: personsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the People
      tags:
      - People
    post:
      description: Create a new person
      parameters:
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPersonRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                required:
                  - metadata
                  - result
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    $ref: '#/components/schemas/person'
                title: personResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Create a new Person
      tags:
      - People
