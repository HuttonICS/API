info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /seasons:
    get:
      description: "Call to retrive all seasons in the database.\n\nA season is made of 2 parts\n\n- The primary year \n\n- A term which defines a segment of the year. \nThis could be a traditional season, like \"Spring\" or \"Summer\"; \nthis could be a month, like \"May\" or \"June\"; \nor this could be an arbitrary season name which is meaningful to the breeding program like \"PlantingTime_3\" or \"Season E\""
      parameters:
      - description: The unique identifier for a season. For backward compatibility it can be a string like '2012', '1957-2004'
        example: 2012, 2012-2019, 3
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: The term to describe a given season. Example "Spring" OR "May" OR "PlantingTime7".
        example: Spring
        in: query
        name: season
        required: false
        schema:
          type: string
      - description: The 4 digit year of a season. Example "2017"
        example: 2017
        in: query
        name: year
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 10
                    totalPages: 5
                  status: []
                result:
                  data:
                  - season: fall
                    seasonDbId: '1'
                    year: '2011'
                  - season: winter
                    seasonDbId: 2012
                    year: '2012'
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/season'
                        type: array
                    required:
                    - data
                    type: object
                required:
                - metadata
                - result
                title: seasonsResponse
                type: object
          description: OK
          headers: {}
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      summary: Get the Seasons
      tags:
      - Studies
