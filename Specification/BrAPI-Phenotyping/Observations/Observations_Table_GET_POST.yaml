info:
  title: BrAPI
  version: ''
openapi: 3.0.0
paths:
  /observations/table:
    get:
      summary: Get a list of Observations in a table format
      description: Retrieve the details of the study required for field data collection. Includes actual trait data.
      parameters:
      - description: The unique ID of an Observation Unit
        in: query
        name: observationUnitDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a germplasm (accession) to filter on
        in: query
        name: germplasmDbId
        required: false
        schema:
          type: string
      - description: The unique ID of an observation variable
        in: query
        name: observationVariableDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a studies to filter on
        in: query
        name: studyDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a location where these observations were collected
        in: query
        name: locationDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a trial to filter on
        in: query
        name: trialDbId
        required: false
        schema:
          type: string
      - description: The unique ID of a program to filter on
        in: query
        name: programDbId
        required: false
        schema:
          type: string
      - description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)
        in: query
        name: seasonDbId
        required: false
        schema:
          type: string
      - description: The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.
        in: query
        name: observationLevel
        required: false
        schema:
          type: string
      - description: Timestamp range start
        in: query
        name: observationTimeStampRangeStart
        required: false
        schema:
          format: date-time
          type: string
      - description: Timestamp range end
        in: query
        name: observationTimeStampRangeEnd
        required: false
        schema:
          format: date-time
          type: string
      - $ref: '#/components/parameters/acceptHeader'
      - $ref: '#/components/parameters/authorizationHeader'
      responses:
        '200':
          $ref: '#/components/responses/ObservationTableResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - Observations
    post:
      summary: Submit new Observations in a table format
      description: |-
        This call can be used to create new observations in bulk.
        
        Note - If you need to update any existing observation, please use `PUT /observations`. This call should only be used to create NEW observations.
        
        Implementation Guidelines
        
        + All observations submitted through this call should create NEW observation records in the database under the given observation unit. 
        
        + Each `observationUnitDbId` listed should already exist in the database. If the server can not find a given `observationUnitDbId`, it should report an error. (see Error Handling) 
      parameters: 
      - $ref: '#/components/parameters/authorizationHeader'
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationTable'
      responses: 
        '200':
          $ref: '#/components/responses/ObservationTableResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
      tags:
      - Observations
components:
  responses:
    ObservationTableResponse:
      content:
        application/json:
          schema:
            title: ObservationTableResponse
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/metadata'
              result:
                $ref: '#/components/schemas/ObservationTable'
            required:
            - metadata
            - result
        application/csv:
          example: |-
            'year','studyDbId','studyName','locationDbId','locationName','germplasmDbId','germplasmName','observationUnitDbId','plotNumber','replicate','blockNumber','observationTimestamp','entryType','X','Y','variable1DbId','variable2DbId','variable3DbId'
            
            '2017','stu1','Study Name','loc1','Location Name','CIP1','CIP Name','abc123','1','1','1','2017-06-16T00:53:26Z','Test Entry','1','2','25.3','103.4','50.75'
            
            '2017','stu1','Study Name','loc1','Location Name','CIP1','CIP Name','abc124','1','1','1','2017-06-16T00:54:57Z','Test Entry','2','2','27.9','98.65','45.345'
          schema:
            type: string
        application/tsv:
          example: |-
            'year'\t'studyDbId'\t'studyName'\t'locationDbId'\t'locationName'\t'germplasmDbId'\t'germplasmName'\t'observationUnitDbId'\t'plotNumber'\t'replicate'\t'blockNumber'\t'observationTimestamp'\t'entryType'\t'X'\t'Y'\t'variable1DbId'\t'variable2DbId'\t'variable3DbId'
            
            '2017'\t'stu1'\t'Study Name'\t'loc1'\t'Location Name'\t'CIP1'\t'CIP Name'\t'abc123'\t'1'\t'1'\t'1'\t'2017-06-16T00:53:26Z'\t'Test Entry'\t'1'\t'2'\t'25.3'\t'103.4'\t'50.75'
            
            '2017'\t'stu1'\t'Study Name'\t'loc1'\t'Location Name'\t'CIP1'\t'CIP Name'\t'abc124'\t'1'\t'1'\t'1'\t'2017-06-16T00:54:57Z'\t'Test Entry'\t'2'\t'2'\t'27.9'\t'98.65'\t'45.345'
          schema:
            type: string
      description: OK
      headers: {}
