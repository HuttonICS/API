info:
  title: BrAPI
  version: 1.3-oas3
openapi: 3.0.0
paths:
  /maps/{mapDbId}/positions:
    get:
      description: "markers ordered by linkageGroup and position \n\nStatus: ACCEPTED. Implemented by: Germinate, Cassavabase Used by: Flapjack"
      parameters:
      - description: unique id of the map
        in: path
        name: mapDbId
        required: true
        schema:
          type: string
      - description: Deprecated Use linkageGroupName instead
        in: query
        name: linkageGroupId
        required: false
        schema:
          type: string
      - description: The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.
        in: query
        name: linkageGroupName
        required: false
        schema:
          type: string
      - description: The size of the pages to be returned. Default is `1000`.
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
      - description: Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.
        in: query
        name: page
        required: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 22
                    totalPages: 11
                  status: []
                result:
                  data:
                  - linkageGroupName: '1'
                    location: '1000'
                    markerDbId: mr1
                    markerName: marker1-1
                  - linkageGroupName: '1'
                    location: '1020'
                    markerDbId: mr2
                    markerName: marker1-2
              schema:
                properties:
                  metadata:
                    $ref: '#/components/schemas/metadata'
                  result:
                    properties:
                      data:
                        items:
                          $ref: '#/components/schemas/markerSummaryMap'
                        type: array
                    type: object
                title: markersResponse
                type: object
          description: OK
          headers: {}
      summary: Get map data
      tags:
      - Genome Maps
